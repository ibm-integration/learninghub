(window.webpackJsonp=window.webpackJsonp||[]).push([[25,27,29,31,37,52],{"013z":function(e,t,a){"use strict";var n=a("q1tI"),o=a.n(n),r=a("NmYn"),s=a.n(r),l=a("Wbzz"),i=a("Xrax"),c=a("k4MR"),b=a("TSYQ"),p=a.n(b),m=a("QH2O"),d=a.n(m),u=a("qKvR");var h=e=>{let{title:t,theme:a,tabs:n=[]}=e;return Object(u.b)("div",{className:p()(d.a.pageHeader,{[d.a.withTabs]:n.length,[d.a.darkMode]:"dark"===a})},Object(u.b)("div",{className:"bx--grid"},Object(u.b)("div",{className:"bx--row"},Object(u.b)("div",{className:"bx--col-lg-12"},Object(u.b)("h1",{id:"page-title",className:d.a.text},t)))))},j=a("BAC9");var g=e=>{let{relativePagePath:t,repository:a}=e;const{site:{siteMetadata:{repository:n}}}=Object(l.useStaticQuery)("1364590287"),{baseUrl:o,subDirectory:r,branch:s}=a||n,i=o+"/edit/"+s+r+"/src/pages"+t;return o?Object(u.b)("div",{className:"bx--row "+j.row},Object(u.b)("div",{className:"bx--col"},Object(u.b)("a",{className:j.link,href:i},"Edit this page on GitHub"))):null},O=a("FCXl"),y=a("dI71"),N=a("I8xM");var f=function(e){function t(){return e.apply(this,arguments)||this}return Object(y.a)(t,e),t.prototype.render=function(){const{title:e,tabs:t,slug:a}=this.props,n=a.split("/").filter(Boolean).slice(-1)[0],o=t.map(e=>{const t=s()(e,{lower:!0,strict:!0}),o=t===n,r=new RegExp(n+"/?(#.*)?$"),i=a.replace(r,t);return Object(u.b)("li",{key:e,className:p()({[N.selectedItem]:o},N.listItem)},Object(u.b)(l.Link,{className:N.link,to:""+i},e))});return Object(u.b)("div",{className:N.tabsContainer},Object(u.b)("div",{className:"bx--grid"},Object(u.b)("div",{className:"bx--row"},Object(u.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(u.b)("nav",{"aria-label":e},Object(u.b)("ul",{className:N.list},o))))))},t}(o.a.Component),w=a("MjG9"),x=a("CzIb"),v=a("Asxa"),k=a("OIbQ"),T=a.n(k);var C=e=>{let{date:t}=e;const a=new Date(t);return t?Object(u.b)(v.c,{className:T.a.row},Object(u.b)(v.a,null,Object(u.b)("div",{className:T.a.text},"Page last updated: ",a.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null};t.a=e=>{let{pageContext:t,children:a,location:n,Title:o}=e;const{frontmatter:r={},relativePagePath:b,titleType:p}=t,{tabs:m,title:d,theme:j,description:y,keywords:N,date:v}=r,{interiorTheme:k}=Object(x.a)(),{site:{pathPrefix:T}}=Object(l.useStaticQuery)("2456312558"),S=T?n.pathname.replace(T,""):n.pathname,P=m?S.split("/").filter(Boolean).slice(-1)[0]||s()(m[0],{lower:!0}):"",L=j||k;return Object(u.b)(c.a,{tabs:m,homepage:!1,theme:L,pageTitle:d,pageDescription:y,pageKeywords:N,titleType:p},Object(u.b)(h,{title:o?Object(u.b)(o,null):d,label:"label",tabs:m,theme:L}),m&&Object(u.b)(f,{title:d,slug:S,tabs:m,currentTab:P}),Object(u.b)(w.a,{padded:!0},a,Object(u.b)(g,{relativePagePath:b}),Object(u.b)(C,{date:v})),Object(u.b)(O.a,{pageContext:t,location:n,slug:S,tabs:m,currentTab:P}),Object(u.b)(i.a,null))}},BAC9:function(e,t,a){e.exports={bxTextTruncateEnd:"EditLink-module--bx--text-truncate--end--2pqje",bxTextTruncateFront:"EditLink-module--bx--text-truncate--front--3_lIE",link:"EditLink-module--link--1qzW3",row:"EditLink-module--row--1B9Gk"}},I8xM:function(e,t,a){e.exports={bxTextTruncateEnd:"PageTabs-module--bx--text-truncate--end--267NA",bxTextTruncateFront:"PageTabs-module--bx--text-truncate--front--3xEQF",tabsContainer:"PageTabs-module--tabs-container--8N4k0",list:"PageTabs-module--list--3eFQc",listItem:"PageTabs-module--list-item--nUmtD",link:"PageTabs-module--link--1mDJ1",selectedItem:"PageTabs-module--selected-item--YPVr3"}},OIbQ:function(e,t,a){e.exports={bxTextTruncateEnd:"last-modified-date-module--bx--text-truncate--end--123zi",bxTextTruncateFront:"last-modified-date-module--bx--text-truncate--front--3xeKz",text:"last-modified-date-module--text--24m-4",row:"last-modified-date-module--row--2BquN"}},QH2O:function(e,t,a){e.exports={bxTextTruncateEnd:"PageHeader-module--bx--text-truncate--end--mZWeX",bxTextTruncateFront:"PageHeader-module--bx--text-truncate--front--3zvrI",pageHeader:"PageHeader-module--page-header--3hIan",darkMode:"PageHeader-module--dark-mode--hBrwL",withTabs:"PageHeader-module--with-tabs--3nKxA",text:"PageHeader-module--text--o9LFq"}},zeqw:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return i})),a.d(t,"default",(function(){return h}));var n=a("wx14"),o=a("Ff2n"),r=(a("q1tI"),a("7ljp")),s=a("013z");a("qKvR");const l=["components"],i={},c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(r.b)("div",t)},b=c("PageDescription"),p=c("AnchorLinks"),m=c("AnchorLink"),d={_frontmatter:i},u=s.a;function h(e){let{components:t}=e,a=Object(o.a)(e,l);return Object(r.b)(u,Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)(b,{mdxType:"PageDescription"},Object(r.b)("p",null,"Use this guide to contribute to the theme. We’ll show you how to get the development environment set up as quickly as possible so you can start contributing.")),Object(r.b)(p,{mdxType:"AnchorLinks"},Object(r.b)(m,{mdxType:"AnchorLink"},"Project setup"),Object(r.b)(m,{mdxType:"AnchorLink"},"Development"),Object(r.b)(m,{mdxType:"AnchorLink"},"Work in a branch"),Object(r.b)(m,{mdxType:"AnchorLink"},"Sass and CSS Modules"),Object(r.b)(m,{mdxType:"AnchorLink"},"VS Code"),Object(r.b)(m,{mdxType:"AnchorLink"},"Test pages"),Object(r.b)(m,{mdxType:"AnchorLink"},"Publishing")),Object(r.b)("h2",null,"Project setup"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Go to ",Object(r.b)("a",{parentName:"p",href:"https://github.com/carbon-design-system/gatsby-theme-carbon"},"gatsby-theme-carbon")," and click the ",Object(r.b)("inlineCode",{parentName:"p"},"Fork")," button in the top-right corner.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"After it’s finished, click on the ",Object(r.b)("inlineCode",{parentName:"p"},"Clone or Download")," button and copy the contents.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"In your terminal, clone the repo into your directory of choice"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-sh"},"git clone [PASTE_URL_HERE]\ncd gatsby-theme-carbon\n"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"When you clone your forked repo the ",Object(r.b)("inlineCode",{parentName:"p"},"origin")," is set to your fork by default. You’ll want to add a remote that points to the upstream repo."),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-sh"},"git remote add upstream git@github.com:carbon-design-system/gatsby-theme-carbon.git\n"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"In your terminal, verify that the remotes have been set"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-sh"},"git remote -v\n")))),Object(r.b)("h2",null,"Development"),Object(r.b)("p",null,"We use ",Object(r.b)("a",{parentName:"p",href:"https://yarnpkg.com/lang/en/docs/install/"},"yarn")," and yarn workspaces to develop the Carbon Gatsby theme. This allows us to have a development environment that’s closely linked to the theme with minimal setup. Run ",Object(r.b)("inlineCode",{parentName:"p"},"yarn install")," to install all of the projects dependencies."),Object(r.b)("p",null,"This project has two packages: the actual theme package (",Object(r.b)("inlineCode",{parentName:"p"},"gatsby-theme-carbon"),") and the ",Object(r.b)("inlineCode",{parentName:"p"},"example")," package. The example package emulates a project which uses the theme. Its only dependencies are Gatsby, React, and the adjacent theme package. The ",Object(r.b)("inlineCode",{parentName:"p"},"example")," package also serves as the theme’s documentation and ",Object(r.b)("a",{parentName:"p",href:"https://gatsby-theme-carbon.now.sh"},"website"),"; it’s deployed on every merge to master."),Object(r.b)("p",null,"New theme development will happen in the theme package while documentation and testing of that change will occur through changes in the example directory."),Object(r.b)("h3",null,"Development scripts"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"yarn dev")," – start the development environment"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"yarn dev:clean")," – clear cache and restart dev"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"yarn format")," – format your code with prettier"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"yarn lint")," - check for errors in your javascript"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"yarn test:prefix")," – build and serve with a path prefix")),Object(r.b)("h2",null,"Work in a branch"),Object(r.b)("p",null,"You should always start a new project by pulling upstream changes into master and then creating a new branch. This workflow ensures you don’t accidentally commit anything to your master branch and get stuck when trying to open a pull request."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"git checkout master\ngit pull upstream master\ngit checkout -b my-branch-name\n")),Object(r.b)("p",null,"When you’re ready to open a pull request, push to your origin remote."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"git push origin my-branch-name\n")),Object(r.b)("p",null,"You’ll get a message in your terminal with a URL to open up a pull request in the upstream repository. Navigate to that URL and be sure to give a detailed summary of your pull request in the title and body section of the form."),Object(r.b)("h2",null,"Sass and CSS Modules"),Object(r.b)("p",null,"For internal theme components we use ",Object(r.b)("a",{parentName:"p",href:"https://sass-lang.com/documentation/syntax"},"Sass")," and ",Object(r.b)("a",{parentName:"p",href:"https://github.com/css-modules/css-modules#css-modules"},"CSS Modules"),". This allows us to take advantage of the Carbon Design System resources while not worrying about className collisions. By default, each ",Object(r.b)("inlineCode",{parentName:"p"},".scss")," file will be supplied with all of the Carbon Sass ",Object(r.b)("a",{parentName:"p",href:"https://github.com/carbon-design-system/carbon/blob/master/packages/components/src/globals/scss/_vars.scss"},"variables"),": color, spacing, theme, and motion, as well as type and layout mixins, are imported automatically."),Object(r.b)("p",null,"You should colocate your stylesheet with the component(s) that import it. If the component is ",Object(r.b)("inlineCode",{parentName:"p"},"TreeView")," then the stylesheet should be ",Object(r.b)("inlineCode",{parentName:"p"},"TreeView.module.scss"),". All contained within the ",Object(r.b)("inlineCode",{parentName:"p"},"TreeView")," directory."),Object(r.b)("h3",null,"CSS Modules"),Object(r.b)("p",null,"You don’t need to prefix your classes as CSS Modules will generate unique class names for you. Import the class from the ",Object(r.b)("inlineCode",{parentName:"p"},".scss")," file."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-scss",metastring:"path=TreeView.module.scss",path:"TreeView.module.scss"},".treeView {\n  color: $text-01;\n}\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx",metastring:"path=TreeView.js",path:"TreeView.js"},"import { treeView } from './style.css';\n\nconst TreeView = props => <div className={treeView} />;\n")),Object(r.b)("p",null,"For conditionally applying class names, use the ",Object(r.b)("inlineCode",{parentName:"p"},"classname")," library. Note how we’re using a ",Object(r.b)("a",{parentName:"p",href:"https://tylermcginnis.com/computed-property-names/"},"computed property name")," for the property being based to ",Object(r.b)("inlineCode",{parentName:"p"},"cx"),". That’s because the className isn’t literally ",Object(r.b)("inlineCode",{parentName:"p"},'"long"')," it’s a value generated by CSS Modules and placed in the ",Object(r.b)("inlineCode",{parentName:"p"},"long")," variable."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx",metastring:"path=TreeView.js",path:"TreeView.js"},"import cx from 'classname';\nimport { treeView, long } from './style.css';\n\nconst TreeView = props => {\n  const className = cx(treeView, {\n    [long]: props.long,\n  });\n  const TreeView = props => <div className={className} />;\n};\n")),Object(r.b)("p",null,"If you need to target a global class not processed by CSS Modules, you can do so with the ",Object(r.b)("a",{parentName:"p",href:"https://github.com/css-modules/css-modules#exceptions"},"global selector"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-scss"},":global(.bx--grid) .codeBlock {\n  @include carbon--type-style('code-01');\n}\n")),Object(r.b)("h2",null,"VS Code"),Object(r.b)("p",null,"To get linting error feedback while writing javascript and SCSS in VS Code, install the ",Object(r.b)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=shinnn.stylelint"},"stylelint")," and ",Object(r.b)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"},"ESlint")," extensions. We use ESLint’s Prettier rules to format and lint all of our JavaScript in one pass. To get your code to format properly on save, add the following to a ",Object(r.b)("inlineCode",{parentName:"p"},".vscode/settings.json")," in the root of your project"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json",metastring:"path=.vscode/settings.json",path:".vscode/settings.json"},'{\n  "editor.formatOnSave": true,\n  "[javascript]": {\n    "editor.formatOnSave": false\n  },\n  "[javascriptreact]": {\n    "editor.formatOnSave": false\n  },\n  "eslint.autoFixOnSave": true,\n  "prettier.disableLanguages": ["javascript", "javascriptreact"]\n}\n')),Object(r.b)("p",null,"To lint the entire project and get errors in your ",Object(r.b)("inlineCode",{parentName:"p"},"Problems")," tray, you can add the following to a ",Object(r.b)("inlineCode",{parentName:"p"},".vscode/tasks.json")," file in the root of your project. You can run these tasks with ",Object(r.b)("inlineCode",{parentName:"p"},"cmd+shift+d")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json",metastring:"path=.vscode/tasks.json",path:".vscode/tasks.json"},'{\n  "version": "2.0.0",\n  "tasks": [\n    {\n      "type": "npm",\n      "script": "lint:js",\n      "problemMatcher": "$eslint-stylish"\n    },\n    {\n      "type": "npm",\n      "script": "lint:scss",\n      "problemMatcher": {\n        "owner": "stylelint",\n        "fileLocation": ["relative", "${workspaceFolder}"],\n        "pattern": [\n          {\n            "regexp": "^([^\\\\s].*)$",\n            "file": 1\n          },\n          {\n            "regexp": "^\\\\s+(\\\\d+):(\\\\d+)\\\\s+(✖|warning)\\\\s+(.*)\\\\s\\\\s+(.*)$",\n            "line": 1,\n            "column": 2,\n            "severity": 3,\n            "message": 4,\n            "code": 5,\n            "loop": true\n          }\n        ]\n      }\n    }\n  ]\n}\n')),Object(r.b)("h2",null,"Test pages"),Object(r.b)("p",null,"If you want to add examples of what you are working on or see changes you’ve made, you can add an MDX file to ",Object(r.b)("inlineCode",{parentName:"p"},"packages/src/pages/test")," that will be visible at ",Object(r.b)("inlineCode",{parentName:"p"},"(your-server-name)/test/(added-file)")," during development. If you do add a page to the ",Object(r.b)("inlineCode",{parentName:"p"},"/test")," directory, update the below list with the file you added and its purpose to be included with your pull request."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"/learninghub/test/spacing-audit"},Object(r.b)("inlineCode",{parentName:"a"},"Spacing audit")),": use this page to test spacing around components when combined in common patterns.")),Object(r.b)("h2",null,"Publishing"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"figure out if it’s patch or feature"),Object(r.b)("li",{parentName:"ol"},"from the root of the package run ",Object(r.b)("inlineCode",{parentName:"li"},"lerna publish patch")," or ",Object(r.b)("inlineCode",{parentName:"li"},"lerna publish minor")),Object(r.b)("li",{parentName:"ol"},"git push upstream master —follow-tags"),Object(r.b)("li",{parentName:"ol"},"In the project’s ",Object(r.b)("a",{parentName:"li",href:"https://github.com/carbon-design-system/gatsby-theme-carbon/releases"},"release tab"),", edit the new release to include a summary of new changes")))}h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-contributions-mdx-6045bef41f1caedd87b3.js.map