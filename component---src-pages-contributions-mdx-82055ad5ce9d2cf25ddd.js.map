{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/contributions.mdx"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","makeShortcode","name","console","warn","PageDescription","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-contributions-mdx-82055ad5ce9d2cf25ddd.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/rafaelosorio/Documents/GitHub/learninghub/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Use this guide to contribute to the theme. We’ll show you how to get the development environment set up as quickly as possible so you can start contributing.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Project setup</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Development</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Work in a branch</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Sass and CSS Modules</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">VS Code</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Test pages</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Publishing</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Project setup`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Go to `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/carbon-design-system/gatsby-theme-carbon\"\n          }}>{`gatsby-theme-carbon`}</a>{` and click the `}<inlineCode parentName=\"p\">{`Fork`}</inlineCode>{` button in the top-right corner.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`After it’s finished, click on the `}<inlineCode parentName=\"p\">{`Clone or Download`}</inlineCode>{` button and copy the contents.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In your terminal, clone the repo into your directory of choice`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`git clone [PASTE_URL_HERE]\ncd gatsby-theme-carbon\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`When you clone your forked repo the `}<inlineCode parentName=\"p\">{`origin`}</inlineCode>{` is set to your fork by default. You’ll want to add a remote that points to the upstream repo.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`git remote add upstream git@github.com:carbon-design-system/gatsby-theme-carbon.git\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In your terminal, verify that the remotes have been set`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`git remote -v\n`}</code></pre>\n      </li>\n    </ol>\n    <h2>{`Development`}</h2>\n    <p>{`We use `}<a parentName=\"p\" {...{\n        \"href\": \"https://yarnpkg.com/lang/en/docs/install/\"\n      }}>{`yarn`}</a>{` and yarn workspaces to develop the Carbon Gatsby theme. This allows us to have a development environment that’s closely linked to the theme with minimal setup. Run `}<inlineCode parentName=\"p\">{`yarn install`}</inlineCode>{` to install all of the projects dependencies.`}</p>\n    <p>{`This project has two packages: the actual theme package (`}<inlineCode parentName=\"p\">{`gatsby-theme-carbon`}</inlineCode>{`) and the `}<inlineCode parentName=\"p\">{`example`}</inlineCode>{` package. The example package emulates a project which uses the theme. Its only dependencies are Gatsby, React, and the adjacent theme package. The `}<inlineCode parentName=\"p\">{`example`}</inlineCode>{` package also serves as the theme’s documentation and `}<a parentName=\"p\" {...{\n        \"href\": \"https://gatsby-theme-carbon.now.sh\"\n      }}>{`website`}</a>{`; it’s deployed on every merge to master.`}</p>\n    <p>{`New theme development will happen in the theme package while documentation and testing of that change will occur through changes in the example directory.`}</p>\n    <h3>{`Development scripts`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn dev`}</inlineCode>{` – start the development environment`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn dev:clean`}</inlineCode>{` – clear cache and restart dev`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn format`}</inlineCode>{` – format your code with prettier`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn lint`}</inlineCode>{` - check for errors in your javascript`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn test:prefix`}</inlineCode>{` – build and serve with a path prefix`}</li>\n    </ul>\n    <h2>{`Work in a branch`}</h2>\n    <p>{`You should always start a new project by pulling upstream changes into master and then creating a new branch. This workflow ensures you don’t accidentally commit anything to your master branch and get stuck when trying to open a pull request.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`git checkout master\ngit pull upstream master\ngit checkout -b my-branch-name\n`}</code></pre>\n    <p>{`When you’re ready to open a pull request, push to your origin remote.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`git push origin my-branch-name\n`}</code></pre>\n    <p>{`You’ll get a message in your terminal with a URL to open up a pull request in the upstream repository. Navigate to that URL and be sure to give a detailed summary of your pull request in the title and body section of the form.`}</p>\n    <h2>{`Sass and CSS Modules`}</h2>\n    <p>{`For internal theme components we use `}<a parentName=\"p\" {...{\n        \"href\": \"https://sass-lang.com/documentation/syntax\"\n      }}>{`Sass`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/css-modules/css-modules#css-modules\"\n      }}>{`CSS Modules`}</a>{`. This allows us to take advantage of the Carbon Design System resources while not worrying about className collisions. By default, each `}<inlineCode parentName=\"p\">{`.scss`}</inlineCode>{` file will be supplied with all of the Carbon Sass `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/carbon-design-system/carbon/blob/master/packages/components/src/globals/scss/_vars.scss\"\n      }}>{`variables`}</a>{`: color, spacing, theme, and motion, as well as type and layout mixins, are imported automatically.`}</p>\n    <p>{`You should colocate your stylesheet with the component(s) that import it. If the component is `}<inlineCode parentName=\"p\">{`TreeView`}</inlineCode>{` then the stylesheet should be `}<inlineCode parentName=\"p\">{`TreeView.module.scss`}</inlineCode>{`. All contained within the `}<inlineCode parentName=\"p\">{`TreeView`}</inlineCode>{` directory.`}</p>\n    <h3>{`CSS Modules`}</h3>\n    <p>{`You don’t need to prefix your classes as CSS Modules will generate unique class names for you. Import the class from the `}<inlineCode parentName=\"p\">{`.scss`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\",\n        \"metastring\": \"path=TreeView.module.scss\",\n        \"path\": \"TreeView.module.scss\"\n      }}>{`.treeView {\n  color: $text-01;\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"path=TreeView.js\",\n        \"path\": \"TreeView.js\"\n      }}>{`import { treeView } from './style.css';\n\nconst TreeView = props => <div className={treeView} />;\n`}</code></pre>\n    <p>{`For conditionally applying class names, use the `}<inlineCode parentName=\"p\">{`classname`}</inlineCode>{` library. Note how we’re using a `}<a parentName=\"p\" {...{\n        \"href\": \"https://tylermcginnis.com/computed-property-names/\"\n      }}>{`computed property name`}</a>{` for the property being based to `}<inlineCode parentName=\"p\">{`cx`}</inlineCode>{`. That’s because the className isn’t literally `}<inlineCode parentName=\"p\">{`\"long\"`}</inlineCode>{` it’s a value generated by CSS Modules and placed in the `}<inlineCode parentName=\"p\">{`long`}</inlineCode>{` variable.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"path=TreeView.js\",\n        \"path\": \"TreeView.js\"\n      }}>{`import cx from 'classname';\nimport { treeView, long } from './style.css';\n\nconst TreeView = props => {\n  const className = cx(treeView, {\n    [long]: props.long,\n  });\n  const TreeView = props => <div className={className} />;\n};\n`}</code></pre>\n    <p>{`If you need to target a global class not processed by CSS Modules, you can do so with the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/css-modules/css-modules#exceptions\"\n      }}>{`global selector`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`:global(.bx--grid) .codeBlock {\n  @include carbon--type-style('code-01');\n}\n`}</code></pre>\n    <h2>{`VS Code`}</h2>\n    <p>{`To get linting error feedback while writing javascript and SCSS in VS Code, install the `}<a parentName=\"p\" {...{\n        \"href\": \"https://marketplace.visualstudio.com/items?itemName=shinnn.stylelint\"\n      }}>{`stylelint`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\"\n      }}>{`ESlint`}</a>{` extensions. We use ESLint’s Prettier rules to format and lint all of our JavaScript in one pass. To get your code to format properly on save, add the following to a `}<inlineCode parentName=\"p\">{`.vscode/settings.json`}</inlineCode>{` in the root of your project`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\",\n        \"metastring\": \"path=.vscode/settings.json\",\n        \"path\": \".vscode/settings.json\"\n      }}>{`{\n  \"editor.formatOnSave\": true,\n  \"[javascript]\": {\n    \"editor.formatOnSave\": false\n  },\n  \"[javascriptreact]\": {\n    \"editor.formatOnSave\": false\n  },\n  \"eslint.autoFixOnSave\": true,\n  \"prettier.disableLanguages\": [\"javascript\", \"javascriptreact\"]\n}\n`}</code></pre>\n    <p>{`To lint the entire project and get errors in your `}<inlineCode parentName=\"p\">{`Problems`}</inlineCode>{` tray, you can add the following to a `}<inlineCode parentName=\"p\">{`.vscode/tasks.json`}</inlineCode>{` file in the root of your project. You can run these tasks with `}<inlineCode parentName=\"p\">{`cmd+shift+d`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\",\n        \"metastring\": \"path=.vscode/tasks.json\",\n        \"path\": \".vscode/tasks.json\"\n      }}>{`{\n  \"version\": \"2.0.0\",\n  \"tasks\": [\n    {\n      \"type\": \"npm\",\n      \"script\": \"lint:js\",\n      \"problemMatcher\": \"$eslint-stylish\"\n    },\n    {\n      \"type\": \"npm\",\n      \"script\": \"lint:scss\",\n      \"problemMatcher\": {\n        \"owner\": \"stylelint\",\n        \"fileLocation\": [\"relative\", \"\\${workspaceFolder}\"],\n        \"pattern\": [\n          {\n            \"regexp\": \"^([^\\\\\\\\s].*)$\",\n            \"file\": 1\n          },\n          {\n            \"regexp\": \"^\\\\\\\\s+(\\\\\\\\d+):(\\\\\\\\d+)\\\\\\\\s+(✖|warning)\\\\\\\\s+(.*)\\\\\\\\s\\\\\\\\s+(.*)$\",\n            \"line\": 1,\n            \"column\": 2,\n            \"severity\": 3,\n            \"message\": 4,\n            \"code\": 5,\n            \"loop\": true\n          }\n        ]\n      }\n    }\n  ]\n}\n`}</code></pre>\n    <h2>{`Test pages`}</h2>\n    <p>{`If you want to add examples of what you are working on or see changes you’ve made, you can add an MDX file to `}<inlineCode parentName=\"p\">{`packages/src/pages/test`}</inlineCode>{` that will be visible at `}<inlineCode parentName=\"p\">{`(your-server-name)/test/(added-file)`}</inlineCode>{` during development. If you do add a page to the `}<inlineCode parentName=\"p\">{`/test`}</inlineCode>{` directory, update the below list with the file you added and its purpose to be included with your pull request.`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/learninghub/test/spacing-audit\"\n        }}><inlineCode parentName=\"a\">{`Spacing audit`}</inlineCode></a>{`: use this page to test spacing around components when combined in common patterns.`}</li>\n    </ul>\n    <h2>{`Publishing`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`figure out if it’s patch or feature`}</li>\n      <li parentName=\"ol\">{`from the root of the package run `}<inlineCode parentName=\"li\">{`lerna publish patch`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`lerna publish minor`}</inlineCode></li>\n      <li parentName=\"ol\">{`git push upstream master —follow-tags`}</li>\n      <li parentName=\"ol\">{`In the project’s `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/carbon-design-system/gatsby-theme-carbon/releases\"\n        }}>{`release tab`}</a>{`, edit the new release to include a summary of new changes`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}