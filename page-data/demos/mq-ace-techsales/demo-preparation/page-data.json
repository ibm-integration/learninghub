{"componentChunkName":"component---src-pages-demos-mq-ace-techsales-demo-preparation-mdx","path":"/demos/mq-ace-techsales/demo-preparation/","result":{"pageContext":{"frontmatter":{"title":"MQ and ACE Demo","description":"MQ and ACE Demo","tabs":["Demo preparation","Demo script"]},"relativePagePath":"/demos/mq-ace-techsales/demo-preparation.mdx","titleType":"page","MdxNode":{"id":"40bd70ef-c685-5820-9d7d-a860b3261261","children":[],"parent":"b8bd0e26-0887-533e-8f50-6766bd5a56fc","internal":{"content":"---\ntitle: MQ and ACE Demo\ndescription: MQ and ACE Demo\ntabs: [ 'Demo preparation', 'Demo script']\n---\n\n\n<FeatureCard\n  title=\"Access backend systems using Messaging and Integration - Demo Preparation\"\n  color=\"dark\"\n  >\n\n![banner](./images/messaging-banner.jpg)\n\n</FeatureCard>\n\n<AnchorLinks>\n  <AnchorLink>1 - Review Demo Scenario</AnchorLink>\n  <AnchorLink>2 - OpenShift Installation</AnchorLink>\n  <AnchorLink>3 - Access your OpenShift cluster and install the command line</AnchorLink>\n  <AnchorLink>4 - Clone Repositories</AnchorLink>\n  <AnchorLink>5 - Set Context</AnchorLink>\n  <AnchorLink>6 - Install Foundational Services</AnchorLink>\n  <AnchorLink>7 - Deploy the Platform UI</AnchorLink>\n  <AnchorLink>8 - Deploy the Enterprise Messaging (MQ)</AnchorLink>\n  <AnchorLink>9 - Deploy the App Connect</AnchorLink>\n  <AnchorLink>10 - Install IBM App Connect Enterprise for Developers (Toolkit)</AnchorLink>\n</AnchorLinks>\n\n***\n\n### 1 - Review Demo Scenario\n\n| DEMO OVERVIEW |                          |\n| --------------------------------------- | ------------------------------------- |\n| **Scenario overview** | Access applications through  messages and integrations.  <br/><br/> To automate this customer interaction, we will use both messaging and integrations to back-end applications. |\n| **Demo products** | Cloud Pak for Integration (IBM MQ & ACE) |\n| **Demo capabilities** | Message Queue; ACE Toolkit; Application integration |\n| **Demo intro slides** | Download the Introduction and Overview slides <a href=\"https://github.com/ibm-integration/learninghub/blob/main/src/pages/demos/mq-ace-techsales/files/MQACESlides.pptx\" target=\"_blank\" rel=\"noreferrer\">here</a>. |\n| **Demo script** | This demo script has multiple tasks that each have multiple steps. In each step, you have the details about what you need to do (**Actions**), what you can say while delivering this demo step (**Narration**), and what diagrams and screenshots you will see.<br/><br/> This demo script is a suggestion, and you are welcome to customize based on your sales opportunity. Most importantly, practice this demo in advance. If the demo seems easy for you to execute, the customer will focus on the content. If it seems difficult for you to execute, the customer will focus on your delivery. |\n| **Prerequisites** | You need to have installed in your machine: <br/>- <a href=\"https://docs.openshift.com/container-platform/4.8/cli_reference/openshift_cli/getting-started-cli.html\" target=\"_blank\">oc CLI</a> v4.6+.<br/>- github CLI<br/>- Bash Shell<br/><br/>- JAVA v8+ <br/><br/>And you also need an account in the folllowing email service to configure your CP4I environment:<br/>- <a href=\"https://mailtrap.io/\" target=\"_blank\">mailtrap</a>|\n| **Demo authors** | Rafael Osorio, Carlos Hirata and Ravi Katikala |\n| **How to get support** | Contact <a href=\"mailto:rosorio@br.ibm.com\">rosorio@br.ibm.com</a> regarding issues with running this demo use case or installing the Cloud Pak for Integration. <br/><br/> Open a support case at <a href=\"https://techzone.ibm.com/help\" target=\"_blank\">IBM Technology Zone Help</a> regarding issues with reserving and provisioning Tech Zone environments.|\n\n***\n\n### 2 - OpenShift Installation\n\n<InlineNotification>If you already requested an environment for <a href=\"https://ibm-integration.github.io/learninghub/demos/mq-techsales/demo-preparation\" target=\"_blank\">MQ Uniform Clusters Demo</a>, you can reuse the same environment! You don't need to repeat the same demo preparation steps again, just go ahead and skip to step <a href=\"https://ibm-integration.github.io/learninghub/demos/mq-ace-techsales/demo-preparation#9-deploy-the-app-connect\">9 - Deploy the App Connect</a>, and complete steps 9 and 10, and you will be ready to complete this demo. If not, go ahead and complete all steps of this document (steps 2 to 10).</InlineNotification>\n\n\nIBM Cloud Pak for Integration brings together IBM’s market-leading middleware capabilities to support a broad range of integration styles and use cases. With powerful deployment, lifecycle management, and production services running on Red Hat OpenShift, it enables clients to leverage the latest agile integration practices, simplify the management of their integration architecture, and reduce cost. Cloud Pak for Integration demands an OpenShift cluster.\n\nFollow the steps below to provision a Red Hat OpenShift Container Platform cluster on VMware on IBM Cloud.\n\n\n2.1 To request an OpenShift Cluster on VMware on IBM Cloud, go <a href=\"https://techzone.ibm.com/my/reservations/create/63a3a25a3a4689001740dbb3\" target=\"_blank\">here</a> and complete the form with the follow details.\n\n| Field  | Value |\n| ------------- | ------------- |\n| Purpose  | If you are doing the L4 course, select **Practice/Self Enablement**. <br/> If you are delivering a PoC, select:**Proof-of-Technology** and inform the Sales opportunity.  |\n| Purpose Description  | If you are doing the L3 course, enter: **MQ L3 Course**. <br/> If you are delivering a POC, enter the PoC details.  |\n| Preferred Geography  | You are welcome to select the preferred Geography |\n\n![](images/ocp-install-1.png)\n\n| Field  | Value |\n| ------------- | ------------- |\n| OpenShift Version | 4.12 |\n| Storage  | ODF - 500 GiB |\n| Worker Node Count  | 5 |\n| Worker Node Flavor  | 16 vCPU x 64 GB - 100 GB ephemeral storage |\n\n![](images/ocp-install-1-2.png)\n\n2.2 **Agree** with the TechZone Terms and Conditions (A) and click **Submit** (B).\n![](images/ocp-install-2.png)\n\n2.3 You will receive an email confirming the instance is provisioning.\n![](images/ocp-install-3.png)\n\n2.4 You will receive a second email once the environment is provisioned. You should expect this to take between 30 and 120 minutes. Now the status update changed to **Ready**.  Click on **Reservation ID** to open the details page of your new reservation environment.\n![](images/ocp-install-4.png)\n\n2.5 Copy your **Cluster Admin Username** (A) and **Cluster Admin Password** (B). Copy the **OCP Console link** (C).\n![](images/ocp-install-5.png)\n\n***\n\n### 3 - Access your OpenShift cluster and install the command line\n\nIn this section, you access your OpenShift cluster and install the OpenShift command line tool.\n\n3.1 In a Browser, open the OCP Console link and paste the **Cluster Admin Username** (A) and **Password** (B) copied in the previous step and click **Log in** (C).\n![](images/oc-cli-1.png)\n\n3.2 Great, you are almost ready for the demo. Last but not least important, let’s copy login command to access the cluster by CLI. On the top right, click your **username** (A) and select **Copy login command** (B).\n![](images/oc-cli-2.png)\n\n3.3 Click **Display Token**.\n![](images/oc-cli-3.png)\n\n3.4 Copy the **Log in with this token command** and **paste** on a terminal window.\n![](images/oc-cli-4.png)\n\n![](images/oc-cli-4-2.png)\n\nThat is it! Now you are ready for the Cloud Pak for Integration installation. Take a breath and let's start to install the Pak.\n\n***\n\n### 4 - Clone Repositories\n\nTo use this guide you will need to clone the <a href=\"https://github.ibm.com/joel-gomez/cp4i-demo\" target=\"_blank\">CP4I end to end demo repo</a> to your workstation. Let's do it now!\n\n\n4.1 Open a terminal window and **run** the command below.\n\n```\ngit clone https://github.ibm.com/joel-gomez/cp4i-demo.git\n```\n\n4.2 Open the **cp4i-demo** folder.\n```\ncd cp4i-demo\n```\n\n***\n\n### 5 - Set Context\n\nBased on where you have deployed your OCP cluster you will need to set up some environment variables to inform the installation script about your environment. Let’s do it here!\n\n5.1 First, you need to define an environment variable to inform CP4I version.\n\n```\nexport CP4I_VER=2023.4\n```\n\n5.2 Now let's set the OCP type based on the storage classes in your cluster.\n```\nexport OCP_TYPE=ODF\n```\n\n`Note:` If you are using ROKS cluster, use export OCP_TYPE=ROKS.\n\n\n5.3 Set mailtap credentials.\n```\nexport MAILTRAP_USER=<my-mailtrap-user>\nexport MAILTRAP_PWD=<my-mailtrap-pwd>\n```\n\n5.4 If you have provisioned your OCP cluster in Tech Zone you can use the following script to set the proper default storage class.\n```\nscripts/99-odf-tkz-set-scs.sh\n```\n\n5.5 Your cluster will also need access to pull the container software required to deploy the Cloud Pak. Your Entitlement Key is used to grant access. You can download you entitlement key from <a href=\"https://myibm.ibm.com/products-services/containerlibrary\" target=\"_blank\">My IBM</a>. Click **Copy**.\n![](images/set-context-5.png)\n\n5.6 The IBM Entitled Registry contains software images for the capabilities in IBM Cloud Pak® for Integration. To allow the Cloud Pak for Integration operators to automatically pull those software images, you must first obtain your entitlement key, then add your entitlement key in a pull secret.  Replace the *my-key* with your **IBM entitlement key**.\n```\nexport ENT_KEY=<my-key>\n```\n\n5.7 Now, you need a namespace where you will deploy the different capabilities.\n```\nscripts/02a-cp4i-ns-key-config.sh\n```\n\n***\n\n### 6 - Install Foundational Services\n\nThe IBM Cloud Pak foundational services operator is no longer installed automatically. Install this operator manually if you need to create an instance that uses identity and access management. That is exactly, what you will do in this section.\n\n6.1 First we need to have a certificate manager, otherwise,  the IBM Cloud Pak foundational services operator installation will not complete. Let's do it!\n```\noc apply -f resources/00-cert-manager-namespace.yaml\noc apply -f resources/00-cert-manager-operatorgroup.yaml\noc apply -f resources/00-cert-manager-subscription.yaml\n```\n\n6.2 Confirm the subscription has been completed successfully before moving to the next step running the following command.\n```\noc get pods -n cert-manager-operator\n```\n\nYou should get a response like this:\n```\nNAME                                                        READY   STATUS    RESTARTS   AGE\ncert-manager-operator-controller-manager-7f779b98b4-2f64r   2/2     Running   0          13h\n```\n\n6.3 Now, you need to install Postgress SQL Catalog Source.\n```\noc apply -f catalog-sources/${CP4I_VER}/01-postgress-sql-catalog-source-4.18.0.yaml\n```\n\n6.4 Confirm the catalog source has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-marketplace | grep postgresql\n```\n\nYou should get a response like this:\n```\ncloud-native-postgresql-catalog-jsmbk                             1/1     Running     0             14h\n```\n\n6.5 Ok, now you need to install Common Services Catalog source.\n```\noc apply -f catalog-sources/${CP4I_VER}/02-common-services-catalog-source-4.4.0.yaml\n```\n\n6.6 Confirm the catalog source has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-marketplace | grep opencloud\n```\n\nYou should get a response like this:\n```\nopencloud-operators-fhbfd                                         1/1     Running     0             14h\n```\n\n6.7 Create the Common Services namespace.\n```\noc new-project ibm-common-services\n```\n\n6.8 Now, let's intall the Foundational Services operator (former Common Services).\n```\noc apply -f subscriptions/${CP4I_VER}/00-common-service-subscription.yaml\n```\n\n6.9 Confirm the operator has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-operators | grep ibm-common-service\n```\n\nYou should get a response like this:\n```\nibm-common-service-operator-8c9b944f4-nkkgb                       1/1     Running     0          14h\n```\n\n***\n\n### 7 - Deploy the Platform UI\n\nDeploying the Platform UI allows you to deploy and manage instances from a central location.\n\n7.1 First, let's install Platform UI Catalog source.\n```\noc apply -f catalog-sources/${CP4I_VER}/03-platform-navigator-catalog-source-7.2.1.yaml\n```\n\n7.2 Confirm the catalog source has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-marketplace | grep ibm-integration-platform-navigator\n```\n\nYou should get a response like this:\n```\nibm-integration-platform-navigator-catalog-xsm4w                  1/1     Running     0             14h\n```\n\n7.3 Now, let's install the Platform UI Operator.\n```\noc apply -f subscriptions/${CP4I_VER}/01-platform-navigator-subscription.yaml\n```\n\n7.4 Confirm the operator has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-operators | grep ibm-integration-platform-navigator\n```\n\nYou should get a response like this:\n```\nibm-integration-platform-navigator-operator-6489bb9b7-tcnz8       1/1     Running     0          14h\n```\n\n7.5 Let's deploy a Platform UI instance.\n```\noc apply -f instances/${CP4I_VER}/common/01-platform-navigator-instance.yaml\n```\n\n7.6 Confirm the instance has been deployed successfully before moving to the next step running the following command:\n```\noc get platformnavigator -n tools\n```\n\nYou should get a response like this:\n```\nNAME             REPLICAS   VERSION      STATUS   READY   LASTUPDATE   AGE   MESSAGE\ncp4i-navigator   3          2023.4.1-0   Ready    True    13h          14h   Platform UI has been provisioned.\n```\n\n7.7 Once the Platform UI instance is up and running get the access info.\n```\nscripts/03b-cp4i-access-info.sh\n```\n\n7.8 Open the Platform UI  URL and log in. Note the password is temporary and you will be required to change it. Take note of your new password, you will use it multiple times.\n![](images/platform-ui-8.png)\n\n***\n\n### 8 - Deploy the Enterprise Messaging (MQ)\n\n8.1 First, let's intall the MQ Catalog Source.\n```\noc apply -f catalog-sources/${CP4I_VER}/09-mq-catalog-source-3.0.1.yaml\n```\n\n8.2 Confirm the catalog source has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-marketplace | grep ibmmq\n```\n\nYou should get a response like this:\n```\nibmmq-operator-catalogsource-4h9ql                                1/1     Running     0              3d23h\n```\n\n8.3 Now, let's install the MQ Operator.\n```\noc apply -f subscriptions/${CP4I_VER}/06-mq-subscription.yaml\n```\n\n8.4 Confirm the operator has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-operators | grep ibm-mq\n```\n\nYou should get a response like this:\n```\nibm-mq-operator-5965468479-btnkh                                  1/1     Running     0               3d23h\n```\n\n8.5 Set MQ namespace environment variable.\n```\nexport MQ_NAMESPACE=cp4i-mq\n```\n\n8.6 Create certificates and extra route.\n```\nscripts/10a-qmgr-pre-config.sh\n```\n\n8.7 Create configmap with MQ configuration.\n```\noc apply -f resources/03c-qmgr-mqsc-config.yaml\n```\n\n8.8 Deploy MQ Queue Manager instance.\n```\nscripts/10b-qmgr-inst-deploy.sh\n```\n\n8.9 Confirm the instance has been deployed successfully before moving to the next step running the following command.\n```\noc get queuemanager -n tools\n```\n\n`Note` this will take few minutes, but at the end you should get a response like this:\n```\nNAME        PHASE\nqmgr-demo   Running\n```\n\n8.10 Create CCDT.\n```\nscripts/10c-qmgr-post-config.sh\n```\n\n***\n\n### 9 - Deploy the App Connect\n\nNow, let's install the IBM App Connect.\n\nBack to the terminal window logged in your OpenShift Environment.\n\n9.1 First, let's intall the App Connect Catalog source.\n```\noc apply -f catalog-sources/${CP4I_VER}/10-app-connect-catalog-source-11.2.0.yaml\n```\n\n9.2 Confirm the catalog source has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-marketplace | grep appconnect\n```\n\nYou should get a response like this.\n```\nappconnect-operator-catalogsource-qt2p5                           1/1     Running     0              3d23h\n```\n\n9.3 Now, we need to install the App Connect operator.\n```\noc apply -f subscriptions/${CP4I_VER}/07-app-connect-subscription.yaml\n```\n\n9.4 Confirm the operator has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-operators | grep ibm-appconnect\n```\n\nYou should get a response like this.\n```\nibm-appconnect-operator-7d789b5b4c-cr8qw                          1/1     Running     2 (3d4h ago)    3d23h\n```\n\n9.5 It is time to Deploy the Dashboard instance.\n```\noc apply -f instances/${CP4I_VER}/${OCP_TYPE}/06-ace-dashboard-instance.yaml\n```\n\n9.6 Confirm the instance has been deployed successfully before moving to the next step running the following command.\n```\noc get dashboard -n tools\n```\n\nNote this will take few minutes, but at the end you should get a response like this.\n```\nNAME            RESOLVEDVERSION   REPLICAS   CUSTOMIMAGES   STATUS   URL                                                                                   AGE\nace-dashboard   12.0.10.0-r3      1          false          Ready    https://ace-dashboard-ui-tools.apps.6597480c8e1478001153ba0d.cloud.techzone.ibm.com   3d23h\n```\n\n9.7 Now, let's create Bar Auth Configuration.\n```\nscripts/11-ace-config-barauth-github.sh\n```\n\n9.8 Create Policy Configuration to integrate with MQ.\n```\nscripts/12a-ace-config-policy-mq.sh\n```\n\nYour App Connect Dashboard environment is ready for the demo! Now, let's prepare the App Connect Toolkit environment.\n***\n\n### 10 - Install IBM App Connect Enterprise for Developers (Toolkit)\n\nYou can use the IBM App Connect Enterprise Toolkit to build powerful integration applications, services, and APIs. You can then deploy your integration solutions to the software run time, IBM App Connect Enterprise as a Service, containers, or a combination of environments.\n\n10.1 Using your **IBMid**, **log in** on <a href=\"https://www.ibm.com/resources/mrs/assets?source=swg-wmbfd\" target=\"_blank\">IBM MRS Tool page</a>.\n![](images/ace-toolkit-10-1.png)\n\n10.2 Provide the requested details (A) and **agree** (B) with the license and click **I confirm** (C).\n![](images/ace-toolkit-10-2.png)\n\n10.3 Select the latest version of **IBM App Connect Enterprise for Developers** (A) and click **Continue** (B).\n![](images/ace-toolkit-10-3.png)\n\n10.4 Then select the appropriate download option (for example, ACE-WIN64-DEVELOPER.exe 1.26 GB), and click **Download**.\n![](images/ace-toolkit-10-4.png)\n\n10.5 Install **IBM App Connect Enterprise for Developers** on your chosen platform. More details available on this <a href=\"https://www.ibm.com/docs/en/app-connect/12.0?topic=enterprise-download-ace-developer-edition-get-started\" target=\"_blank\">page</a>.\n![](images/ace-toolkit-10-5.png)\n\n10.6 Start the **IBM App Connect Enterprise Toolkit** on your chosen platform.\n![](images/ace-toolkit-10-6.png)\n\n10.7 Now let's download the Toolkit project that we will use in the demo. Open a browser and go to this <a href=\"https://github.com/ibm-integration/learninghub/blob/main/static/mq-ace-files/ace-mq.zip\" target=\"_blank\">GitHub page</a>\n\n10.8 Then click on the Download raw file icon.\n![](images/ace-toolkit-10-8.png)\n\nGreat! You are ready to present the demo!  Take a breath and happy selling!\n","type":"Mdx","contentDigest":"fc6a08db270426b2595aa74658b45eb6","owner":"gatsby-plugin-mdx","counter":1143},"frontmatter":{"title":"MQ and ACE Demo","description":"MQ and ACE Demo","tabs":["Demo preparation","Demo script"]},"exports":{},"rawBody":"---\ntitle: MQ and ACE Demo\ndescription: MQ and ACE Demo\ntabs: [ 'Demo preparation', 'Demo script']\n---\n\n\n<FeatureCard\n  title=\"Access backend systems using Messaging and Integration - Demo Preparation\"\n  color=\"dark\"\n  >\n\n![banner](./images/messaging-banner.jpg)\n\n</FeatureCard>\n\n<AnchorLinks>\n  <AnchorLink>1 - Review Demo Scenario</AnchorLink>\n  <AnchorLink>2 - OpenShift Installation</AnchorLink>\n  <AnchorLink>3 - Access your OpenShift cluster and install the command line</AnchorLink>\n  <AnchorLink>4 - Clone Repositories</AnchorLink>\n  <AnchorLink>5 - Set Context</AnchorLink>\n  <AnchorLink>6 - Install Foundational Services</AnchorLink>\n  <AnchorLink>7 - Deploy the Platform UI</AnchorLink>\n  <AnchorLink>8 - Deploy the Enterprise Messaging (MQ)</AnchorLink>\n  <AnchorLink>9 - Deploy the App Connect</AnchorLink>\n  <AnchorLink>10 - Install IBM App Connect Enterprise for Developers (Toolkit)</AnchorLink>\n</AnchorLinks>\n\n***\n\n### 1 - Review Demo Scenario\n\n| DEMO OVERVIEW |                          |\n| --------------------------------------- | ------------------------------------- |\n| **Scenario overview** | Access applications through  messages and integrations.  <br/><br/> To automate this customer interaction, we will use both messaging and integrations to back-end applications. |\n| **Demo products** | Cloud Pak for Integration (IBM MQ & ACE) |\n| **Demo capabilities** | Message Queue; ACE Toolkit; Application integration |\n| **Demo intro slides** | Download the Introduction and Overview slides <a href=\"https://github.com/ibm-integration/learninghub/blob/main/src/pages/demos/mq-ace-techsales/files/MQACESlides.pptx\" target=\"_blank\" rel=\"noreferrer\">here</a>. |\n| **Demo script** | This demo script has multiple tasks that each have multiple steps. In each step, you have the details about what you need to do (**Actions**), what you can say while delivering this demo step (**Narration**), and what diagrams and screenshots you will see.<br/><br/> This demo script is a suggestion, and you are welcome to customize based on your sales opportunity. Most importantly, practice this demo in advance. If the demo seems easy for you to execute, the customer will focus on the content. If it seems difficult for you to execute, the customer will focus on your delivery. |\n| **Prerequisites** | You need to have installed in your machine: <br/>- <a href=\"https://docs.openshift.com/container-platform/4.8/cli_reference/openshift_cli/getting-started-cli.html\" target=\"_blank\">oc CLI</a> v4.6+.<br/>- github CLI<br/>- Bash Shell<br/><br/>- JAVA v8+ <br/><br/>And you also need an account in the folllowing email service to configure your CP4I environment:<br/>- <a href=\"https://mailtrap.io/\" target=\"_blank\">mailtrap</a>|\n| **Demo authors** | Rafael Osorio, Carlos Hirata and Ravi Katikala |\n| **How to get support** | Contact <a href=\"mailto:rosorio@br.ibm.com\">rosorio@br.ibm.com</a> regarding issues with running this demo use case or installing the Cloud Pak for Integration. <br/><br/> Open a support case at <a href=\"https://techzone.ibm.com/help\" target=\"_blank\">IBM Technology Zone Help</a> regarding issues with reserving and provisioning Tech Zone environments.|\n\n***\n\n### 2 - OpenShift Installation\n\n<InlineNotification>If you already requested an environment for <a href=\"https://ibm-integration.github.io/learninghub/demos/mq-techsales/demo-preparation\" target=\"_blank\">MQ Uniform Clusters Demo</a>, you can reuse the same environment! You don't need to repeat the same demo preparation steps again, just go ahead and skip to step <a href=\"https://ibm-integration.github.io/learninghub/demos/mq-ace-techsales/demo-preparation#9-deploy-the-app-connect\">9 - Deploy the App Connect</a>, and complete steps 9 and 10, and you will be ready to complete this demo. If not, go ahead and complete all steps of this document (steps 2 to 10).</InlineNotification>\n\n\nIBM Cloud Pak for Integration brings together IBM’s market-leading middleware capabilities to support a broad range of integration styles and use cases. With powerful deployment, lifecycle management, and production services running on Red Hat OpenShift, it enables clients to leverage the latest agile integration practices, simplify the management of their integration architecture, and reduce cost. Cloud Pak for Integration demands an OpenShift cluster.\n\nFollow the steps below to provision a Red Hat OpenShift Container Platform cluster on VMware on IBM Cloud.\n\n\n2.1 To request an OpenShift Cluster on VMware on IBM Cloud, go <a href=\"https://techzone.ibm.com/my/reservations/create/63a3a25a3a4689001740dbb3\" target=\"_blank\">here</a> and complete the form with the follow details.\n\n| Field  | Value |\n| ------------- | ------------- |\n| Purpose  | If you are doing the L4 course, select **Practice/Self Enablement**. <br/> If you are delivering a PoC, select:**Proof-of-Technology** and inform the Sales opportunity.  |\n| Purpose Description  | If you are doing the L3 course, enter: **MQ L3 Course**. <br/> If you are delivering a POC, enter the PoC details.  |\n| Preferred Geography  | You are welcome to select the preferred Geography |\n\n![](images/ocp-install-1.png)\n\n| Field  | Value |\n| ------------- | ------------- |\n| OpenShift Version | 4.12 |\n| Storage  | ODF - 500 GiB |\n| Worker Node Count  | 5 |\n| Worker Node Flavor  | 16 vCPU x 64 GB - 100 GB ephemeral storage |\n\n![](images/ocp-install-1-2.png)\n\n2.2 **Agree** with the TechZone Terms and Conditions (A) and click **Submit** (B).\n![](images/ocp-install-2.png)\n\n2.3 You will receive an email confirming the instance is provisioning.\n![](images/ocp-install-3.png)\n\n2.4 You will receive a second email once the environment is provisioned. You should expect this to take between 30 and 120 minutes. Now the status update changed to **Ready**.  Click on **Reservation ID** to open the details page of your new reservation environment.\n![](images/ocp-install-4.png)\n\n2.5 Copy your **Cluster Admin Username** (A) and **Cluster Admin Password** (B). Copy the **OCP Console link** (C).\n![](images/ocp-install-5.png)\n\n***\n\n### 3 - Access your OpenShift cluster and install the command line\n\nIn this section, you access your OpenShift cluster and install the OpenShift command line tool.\n\n3.1 In a Browser, open the OCP Console link and paste the **Cluster Admin Username** (A) and **Password** (B) copied in the previous step and click **Log in** (C).\n![](images/oc-cli-1.png)\n\n3.2 Great, you are almost ready for the demo. Last but not least important, let’s copy login command to access the cluster by CLI. On the top right, click your **username** (A) and select **Copy login command** (B).\n![](images/oc-cli-2.png)\n\n3.3 Click **Display Token**.\n![](images/oc-cli-3.png)\n\n3.4 Copy the **Log in with this token command** and **paste** on a terminal window.\n![](images/oc-cli-4.png)\n\n![](images/oc-cli-4-2.png)\n\nThat is it! Now you are ready for the Cloud Pak for Integration installation. Take a breath and let's start to install the Pak.\n\n***\n\n### 4 - Clone Repositories\n\nTo use this guide you will need to clone the <a href=\"https://github.ibm.com/joel-gomez/cp4i-demo\" target=\"_blank\">CP4I end to end demo repo</a> to your workstation. Let's do it now!\n\n\n4.1 Open a terminal window and **run** the command below.\n\n```\ngit clone https://github.ibm.com/joel-gomez/cp4i-demo.git\n```\n\n4.2 Open the **cp4i-demo** folder.\n```\ncd cp4i-demo\n```\n\n***\n\n### 5 - Set Context\n\nBased on where you have deployed your OCP cluster you will need to set up some environment variables to inform the installation script about your environment. Let’s do it here!\n\n5.1 First, you need to define an environment variable to inform CP4I version.\n\n```\nexport CP4I_VER=2023.4\n```\n\n5.2 Now let's set the OCP type based on the storage classes in your cluster.\n```\nexport OCP_TYPE=ODF\n```\n\n`Note:` If you are using ROKS cluster, use export OCP_TYPE=ROKS.\n\n\n5.3 Set mailtap credentials.\n```\nexport MAILTRAP_USER=<my-mailtrap-user>\nexport MAILTRAP_PWD=<my-mailtrap-pwd>\n```\n\n5.4 If you have provisioned your OCP cluster in Tech Zone you can use the following script to set the proper default storage class.\n```\nscripts/99-odf-tkz-set-scs.sh\n```\n\n5.5 Your cluster will also need access to pull the container software required to deploy the Cloud Pak. Your Entitlement Key is used to grant access. You can download you entitlement key from <a href=\"https://myibm.ibm.com/products-services/containerlibrary\" target=\"_blank\">My IBM</a>. Click **Copy**.\n![](images/set-context-5.png)\n\n5.6 The IBM Entitled Registry contains software images for the capabilities in IBM Cloud Pak® for Integration. To allow the Cloud Pak for Integration operators to automatically pull those software images, you must first obtain your entitlement key, then add your entitlement key in a pull secret.  Replace the *my-key* with your **IBM entitlement key**.\n```\nexport ENT_KEY=<my-key>\n```\n\n5.7 Now, you need a namespace where you will deploy the different capabilities.\n```\nscripts/02a-cp4i-ns-key-config.sh\n```\n\n***\n\n### 6 - Install Foundational Services\n\nThe IBM Cloud Pak foundational services operator is no longer installed automatically. Install this operator manually if you need to create an instance that uses identity and access management. That is exactly, what you will do in this section.\n\n6.1 First we need to have a certificate manager, otherwise,  the IBM Cloud Pak foundational services operator installation will not complete. Let's do it!\n```\noc apply -f resources/00-cert-manager-namespace.yaml\noc apply -f resources/00-cert-manager-operatorgroup.yaml\noc apply -f resources/00-cert-manager-subscription.yaml\n```\n\n6.2 Confirm the subscription has been completed successfully before moving to the next step running the following command.\n```\noc get pods -n cert-manager-operator\n```\n\nYou should get a response like this:\n```\nNAME                                                        READY   STATUS    RESTARTS   AGE\ncert-manager-operator-controller-manager-7f779b98b4-2f64r   2/2     Running   0          13h\n```\n\n6.3 Now, you need to install Postgress SQL Catalog Source.\n```\noc apply -f catalog-sources/${CP4I_VER}/01-postgress-sql-catalog-source-4.18.0.yaml\n```\n\n6.4 Confirm the catalog source has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-marketplace | grep postgresql\n```\n\nYou should get a response like this:\n```\ncloud-native-postgresql-catalog-jsmbk                             1/1     Running     0             14h\n```\n\n6.5 Ok, now you need to install Common Services Catalog source.\n```\noc apply -f catalog-sources/${CP4I_VER}/02-common-services-catalog-source-4.4.0.yaml\n```\n\n6.6 Confirm the catalog source has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-marketplace | grep opencloud\n```\n\nYou should get a response like this:\n```\nopencloud-operators-fhbfd                                         1/1     Running     0             14h\n```\n\n6.7 Create the Common Services namespace.\n```\noc new-project ibm-common-services\n```\n\n6.8 Now, let's intall the Foundational Services operator (former Common Services).\n```\noc apply -f subscriptions/${CP4I_VER}/00-common-service-subscription.yaml\n```\n\n6.9 Confirm the operator has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-operators | grep ibm-common-service\n```\n\nYou should get a response like this:\n```\nibm-common-service-operator-8c9b944f4-nkkgb                       1/1     Running     0          14h\n```\n\n***\n\n### 7 - Deploy the Platform UI\n\nDeploying the Platform UI allows you to deploy and manage instances from a central location.\n\n7.1 First, let's install Platform UI Catalog source.\n```\noc apply -f catalog-sources/${CP4I_VER}/03-platform-navigator-catalog-source-7.2.1.yaml\n```\n\n7.2 Confirm the catalog source has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-marketplace | grep ibm-integration-platform-navigator\n```\n\nYou should get a response like this:\n```\nibm-integration-platform-navigator-catalog-xsm4w                  1/1     Running     0             14h\n```\n\n7.3 Now, let's install the Platform UI Operator.\n```\noc apply -f subscriptions/${CP4I_VER}/01-platform-navigator-subscription.yaml\n```\n\n7.4 Confirm the operator has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-operators | grep ibm-integration-platform-navigator\n```\n\nYou should get a response like this:\n```\nibm-integration-platform-navigator-operator-6489bb9b7-tcnz8       1/1     Running     0          14h\n```\n\n7.5 Let's deploy a Platform UI instance.\n```\noc apply -f instances/${CP4I_VER}/common/01-platform-navigator-instance.yaml\n```\n\n7.6 Confirm the instance has been deployed successfully before moving to the next step running the following command:\n```\noc get platformnavigator -n tools\n```\n\nYou should get a response like this:\n```\nNAME             REPLICAS   VERSION      STATUS   READY   LASTUPDATE   AGE   MESSAGE\ncp4i-navigator   3          2023.4.1-0   Ready    True    13h          14h   Platform UI has been provisioned.\n```\n\n7.7 Once the Platform UI instance is up and running get the access info.\n```\nscripts/03b-cp4i-access-info.sh\n```\n\n7.8 Open the Platform UI  URL and log in. Note the password is temporary and you will be required to change it. Take note of your new password, you will use it multiple times.\n![](images/platform-ui-8.png)\n\n***\n\n### 8 - Deploy the Enterprise Messaging (MQ)\n\n8.1 First, let's intall the MQ Catalog Source.\n```\noc apply -f catalog-sources/${CP4I_VER}/09-mq-catalog-source-3.0.1.yaml\n```\n\n8.2 Confirm the catalog source has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-marketplace | grep ibmmq\n```\n\nYou should get a response like this:\n```\nibmmq-operator-catalogsource-4h9ql                                1/1     Running     0              3d23h\n```\n\n8.3 Now, let's install the MQ Operator.\n```\noc apply -f subscriptions/${CP4I_VER}/06-mq-subscription.yaml\n```\n\n8.4 Confirm the operator has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-operators | grep ibm-mq\n```\n\nYou should get a response like this:\n```\nibm-mq-operator-5965468479-btnkh                                  1/1     Running     0               3d23h\n```\n\n8.5 Set MQ namespace environment variable.\n```\nexport MQ_NAMESPACE=cp4i-mq\n```\n\n8.6 Create certificates and extra route.\n```\nscripts/10a-qmgr-pre-config.sh\n```\n\n8.7 Create configmap with MQ configuration.\n```\noc apply -f resources/03c-qmgr-mqsc-config.yaml\n```\n\n8.8 Deploy MQ Queue Manager instance.\n```\nscripts/10b-qmgr-inst-deploy.sh\n```\n\n8.9 Confirm the instance has been deployed successfully before moving to the next step running the following command.\n```\noc get queuemanager -n tools\n```\n\n`Note` this will take few minutes, but at the end you should get a response like this:\n```\nNAME        PHASE\nqmgr-demo   Running\n```\n\n8.10 Create CCDT.\n```\nscripts/10c-qmgr-post-config.sh\n```\n\n***\n\n### 9 - Deploy the App Connect\n\nNow, let's install the IBM App Connect.\n\nBack to the terminal window logged in your OpenShift Environment.\n\n9.1 First, let's intall the App Connect Catalog source.\n```\noc apply -f catalog-sources/${CP4I_VER}/10-app-connect-catalog-source-11.2.0.yaml\n```\n\n9.2 Confirm the catalog source has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-marketplace | grep appconnect\n```\n\nYou should get a response like this.\n```\nappconnect-operator-catalogsource-qt2p5                           1/1     Running     0              3d23h\n```\n\n9.3 Now, we need to install the App Connect operator.\n```\noc apply -f subscriptions/${CP4I_VER}/07-app-connect-subscription.yaml\n```\n\n9.4 Confirm the operator has been deployed successfully before moving to the next step running the following command.\n```\noc get pods -n openshift-operators | grep ibm-appconnect\n```\n\nYou should get a response like this.\n```\nibm-appconnect-operator-7d789b5b4c-cr8qw                          1/1     Running     2 (3d4h ago)    3d23h\n```\n\n9.5 It is time to Deploy the Dashboard instance.\n```\noc apply -f instances/${CP4I_VER}/${OCP_TYPE}/06-ace-dashboard-instance.yaml\n```\n\n9.6 Confirm the instance has been deployed successfully before moving to the next step running the following command.\n```\noc get dashboard -n tools\n```\n\nNote this will take few minutes, but at the end you should get a response like this.\n```\nNAME            RESOLVEDVERSION   REPLICAS   CUSTOMIMAGES   STATUS   URL                                                                                   AGE\nace-dashboard   12.0.10.0-r3      1          false          Ready    https://ace-dashboard-ui-tools.apps.6597480c8e1478001153ba0d.cloud.techzone.ibm.com   3d23h\n```\n\n9.7 Now, let's create Bar Auth Configuration.\n```\nscripts/11-ace-config-barauth-github.sh\n```\n\n9.8 Create Policy Configuration to integrate with MQ.\n```\nscripts/12a-ace-config-policy-mq.sh\n```\n\nYour App Connect Dashboard environment is ready for the demo! Now, let's prepare the App Connect Toolkit environment.\n***\n\n### 10 - Install IBM App Connect Enterprise for Developers (Toolkit)\n\nYou can use the IBM App Connect Enterprise Toolkit to build powerful integration applications, services, and APIs. You can then deploy your integration solutions to the software run time, IBM App Connect Enterprise as a Service, containers, or a combination of environments.\n\n10.1 Using your **IBMid**, **log in** on <a href=\"https://www.ibm.com/resources/mrs/assets?source=swg-wmbfd\" target=\"_blank\">IBM MRS Tool page</a>.\n![](images/ace-toolkit-10-1.png)\n\n10.2 Provide the requested details (A) and **agree** (B) with the license and click **I confirm** (C).\n![](images/ace-toolkit-10-2.png)\n\n10.3 Select the latest version of **IBM App Connect Enterprise for Developers** (A) and click **Continue** (B).\n![](images/ace-toolkit-10-3.png)\n\n10.4 Then select the appropriate download option (for example, ACE-WIN64-DEVELOPER.exe 1.26 GB), and click **Download**.\n![](images/ace-toolkit-10-4.png)\n\n10.5 Install **IBM App Connect Enterprise for Developers** on your chosen platform. More details available on this <a href=\"https://www.ibm.com/docs/en/app-connect/12.0?topic=enterprise-download-ace-developer-edition-get-started\" target=\"_blank\">page</a>.\n![](images/ace-toolkit-10-5.png)\n\n10.6 Start the **IBM App Connect Enterprise Toolkit** on your chosen platform.\n![](images/ace-toolkit-10-6.png)\n\n10.7 Now let's download the Toolkit project that we will use in the demo. Open a browser and go to this <a href=\"https://github.com/ibm-integration/learninghub/blob/main/static/mq-ace-files/ace-mq.zip\" target=\"_blank\">GitHub page</a>\n\n10.8 Then click on the Download raw file icon.\n![](images/ace-toolkit-10-8.png)\n\nGreat! You are ready to present the demo!  Take a breath and happy selling!\n","fileAbsolutePath":"/Users/rafaelosorio/Documents/GitHub/learninghub/src/pages/demos/mq-ace-techsales/demo-preparation.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}