{"componentChunkName":"component---src-pages-labs-installing-cp-4-i-index-mdx","path":"/labs/installing-cp4i/","result":{"pageContext":{"frontmatter":{"title":"Installing CP4I on IBM Cloud using OpenShift on VMware"},"relativePagePath":"/labs/installing-cp4i/index.mdx","titleType":"page","MdxNode":{"id":"6b2d9cb1-1cfb-5081-a5c1-2480963ff028","children":[],"parent":"a5f3ae3a-837e-5dc4-9511-e5b7f0c6448c","internal":{"content":"---\ntitle: Installing CP4I on IBM Cloud using OpenShift on VMware\n---\n\n\n<FeatureCard\n  title=\"Installing CP4I on IBM Cloud using OpenShift on VMware\"\n  color=\"dark\"\n  >\n\n![banner](images/install-cp4i-banner.jpg)\n\n</FeatureCard>\n\n<AnchorLinks>\n  <AnchorLink>Lab Overview</AnchorLink>\n  <AnchorLink>Prerequisites</AnchorLink>\n  <AnchorLink>Installation Overview</AnchorLink>\n  <AnchorLink>1 - OpenShift Installation</AnchorLink>\n  <AnchorLink>2 – Clone Repositories</AnchorLink>\n  <AnchorLink>3 – Set Context</AnchorLink>\n  <AnchorLink>4 – Add the Catalog Sources</AnchorLink>\n  <AnchorLink>5 – Install the Operators</AnchorLink>\n  <AnchorLink>6 – Deploy the Platform UI</AnchorLink>\n  <AnchorLink>7 - Deploy Asset Repository</AnchorLink>\n  <AnchorLink>8 - Deploy API Connect</AnchorLink>\n  <AnchorLink>9 - Deploy App Connect</AnchorLink>\n  <AnchorLink>Summary</AnchorLink>\n</AnchorLinks>\n\n***\n\n## Lab Overview\n\nA basic knowledge to deliver a CP4I PoC is to know how to install CP4I. Although it is possible to install the Cloud Pak via the OpenShift UI, in this document we will walk you through applying yaml and running scripts from the command line. Having a good understand of interacting with your cluster from the CLI is essential when delivering a PoC.\n\nThe first main goal of this session is to provide you the knowledge about how to install CP4I using command line interface from scratch. Here you will use a Openshift environment provided by TechZone team on IBM Cloud (VMware). However, you are welcome to use any supported OpenShift environment.\n\nThe second goal is to provide a complete CP4I environment with multiple demo assets to be ready to progress your PoC. This is achieved by reusing a <a href=\"https://github.ibm.com/joel-gomez/cp4i-demo\" target=\"_blank\">multi-style integration demo assets</a>.\n\nIn this session you will learn:\n  - how to install CP4I using command line interface from scratch.\n  - how to deploy APIC and App Connect instances.\n\n***\n\n## Prerequisites\n\n- You need to have an OpenShift environment with GitOps operators. For this session, your proctor will provide you a pre-installed environment, with admin access (more details below). If you want to create your personal environment, check this <a href=\"https://www.youtube.com/watch?v=SmDE80vuP3w\" target=\"_blank\">video</a> or follow the preparation section from this <a href=\"https://github.com/sko-master/multi-tenancy-gitops/blob/master/doc/sko-scenario.md\" target=\"_blank\">documentation</a>.\n- You need to have installed in your machine:\n  - <a href=\"https://docs.openshift.com/container-platform/4.8/cli_reference/openshift_cli/getting-started-cli.html\" target=\"_blank\">oc CLI</a> v4.6+.\n  - github CLI\n  - Bash Shell\n  - JAVA v8+\n  - <a href=\"https://www.ibm.com/docs/en/api-connect/10.0.x?topic=configuration-installing-toolkit\" target=\"_blank\">apic CLI</a>\n\nNote some of the tools will be available after you deploy an instance of the capability you are working on. And you also need an account in the folllowing email service to configure APIC:\n  - <a href=\"https://mailtrap.io/\" target=\"_blank\">mailtrap</a>\n***\n\n## Installation Overview\n\nA IBM Cloud Pak® for Integration installation consists of a Red Hat® OpenShift® Container Platform cluster with one or more Cloud Pak for Integration operators installed and one or more instances of Platform UI deployed.\n\nIn this document, we will follow the steps below to install CP4I. If you need more details about the CP4I Installation process, please check the product documentation <a href=\"https://www.ibm.com/docs/en/cloud-paks/cp-integration/2022.4?topic=installing-overview-installation\" target=\"_blank\">here</a>.\n\n  1 - OpenShift Installation\n  2 – Clone Repositories\n  3 – Set Context\n  4 – Add the Catalog Sources\n  5 – Install the Operators\n  6 – Deploy the Platform UI\n  7 - Deploy Asset Repository\n  8 - Deploy API Connect\n  9 - Deploy App Connect\n\n***\n\n## 1 - OpenShift Installation\n\nIBM Cloud Pak for Integration brings together IBM’s market-leading middleware capabilities to support a broad range of integration styles and use cases. With powerful deployment, lifecycle management, and production services running on Red Hat OpenShift, it enables clients to leverage the latest agile integration practices, simplify the management of their integration architecture, and reduce cost. Cloud Pak for Integration demands an OpenShift cluster.\n\nFollow the steps below to provision an OpenShift cluster on VMware on IBM Cloud.\n\n1. To request an OpenShift Cluster on VMware on IBM Cloud, go <a href=\"https://techzone.ibm.com/my/reservations/create/63dba359cc19150018af084f\" target=\"_blank\">here</a> and complete the form with the follow details:\n| Field  | Value |\n| ------------- | ------------- |\n| Purpose  | If you are doing the L4 course, select **Practice/Self Enablement**\nIf you are delivering a PoC, select:\n**Proof-of-Concept** and inform the Sales opportunity.  |\n| Purpose Description  | If you are doing the L4 course, enter: **API-Led Integration L4 Course**\n\nIf you are delivering a POC, enter the PoC details.  |\n| Preferred Geography  | You are welcome to select the preferred Geography |\n\n\n![](images/ocp-install-1.png)\n\n| Field  | Value |\n| ------------- | ------------- |\n| OpenShift Version | 4.12 |\n| OCS/ODF Size  | 500 GiB |\n| Worker Node Count  | 5 |\n| Worker Node Flavor  | 16 vCPU x 64 GB - 100 GB ephemeral storage |\n\n![](images/ocp-install-2.png)\n\n\n2. Click **Submit**.\n![](images/ocp-install-3.png)\n\n3. You will receive a confirmation email confirming the instance is provisioning.\n![](images/ocp-install-4.png)\n\n4. You will receive a second email once the environment is provisioned. You should expect this to take between 30 and 120 minutes. This email contains information, such as URLs, allowing you to connect to the instance.\n![](images/ocp-install-5.png)\n\n5. Copy your **Cluster Admin Username** (1) and **Cluster Admin Password** (2). Open the **OCP Console link** (3).\n![](images/ocp-install-6.png)\n\n6. Log in with the **Cluster Admin Username** and **Password** copied in the previous step.\n![](images/ocp-install-7.png)\n\n7. Great, you are almost ready for the lab. Last but not least important, let’s copy login command to access the cluster by CLI. On the top right, click your **username** and select **Copy login command**.\n![](images/ocp-install-8.png)\n\n8. Click **Display Token**.\n![](images/ocp-install-9.png)\n\n9. Copy the **Log in with this token** command and **paste** on a terminal window.\n![](images/ocp-install-10.png)\n\n  That is it! Now you are ready for the lab. Take a breath and enjoy your lab!\n\n***\n\n## 2 - Clone Repositories\n\nTo use this guide you will need to clone the <a href=\"https://github.ibm.com/joel-gomez/cp4i-demo\" target=\"_blank\">CP4I end to end demo repo</a> to your workstation. Let's do it now!\n\n\n1. Open a terminal window and **run** the command below.\n\n```\ngit clone https://github.ibm.com/joel-gomez/cp4i-demo.git\n```\n\n2. Open the **cp4i-demo** folder.\n```\ncd cp4i-demo\n```\n\n***\n\n## 3 - Set Context\n\nBased on where you have deployed your OCP cluster you will need to set up some environment variables to inform the installation script about your environment. Let's do it here!\n\n1. First, you need to define an environment variable to use the proper storage classes when deploying the instances. The two option available at the moment are ROKS and ODF. In this lab, you are using ODF.\n```\nexport OCP_TYPE=ODF\n```\n\n2. To select which version you want to deploy set up the correspponding environment variable. The options available are the latest LTS and CD versions. In this lab, let's use **2022.4** version.\n```\nexport CP4I_VER=2022.4\n```\n\n3. By default tracing will be enabled when possible to show this functionality. For clarify, when you are deploying CP4I v2022.2 tracing means Operations Dashboard, and when using v2022.4 it is Instana. In any case, if your demo does not require this option you can disable it setting the environment variable CP4I_TRACING to false, with it you are simplifying the deployment process. In this lab, you will disable tracing. Check the <a href=\"https://github.ibm.com/joel-gomez/cp4i-demo\" target=\"_blank\">CP4I end to end demo repo</a> for more information if you want/need to enable the tracing.\n```\nexport CP4I_TRACING=NO\n```\n\n4. Before you start you can check you have the tools used by this repo running the following script:\n```\nscripts/00a-cp4i-prereq-vaidation.sh\n```\n\n5. We will start installing the overall prerequisites that will help to demonstrate the integration with OCP. To do so, run the following command to install the logging functionality. The script will track the progress and it will send you an email to your *mailtrap* inbox when the operators and logging instance are ready or in case any problem is detected, for that you need to set the environment variables with your *mailtrap* account as shown below.\n```\nexport MAILTRAP_USER=<my-mailtrap-user>\nexport MAILTRAP_PWD=<my-mailtrap-pwd>\nscripts/00b-logging-install.sh\n```\n\n6. To confirm the installation completed successfully after receiving the email you can run the following commands:\n```\noc get csv -n openshift-logging\noc get pods -n openshift-logging\n```\n\nYou should receive a response like this for each command respectively.\n```\nNAME                            DISPLAY                            VERSION   REPLACES   PHASE\ncluster-logging.v5.6.1          Red Hat OpenShift Logging          5.6.1                Succeeded\nelasticsearch-operator.v5.6.1   OpenShift Elasticsearch Operator   5.6.1                Succeeded\n```\n\n```\nNAME                                            READY   STATUS      RESTARTS   AGE\ncluster-logging-operator-756b4c48cc-lhkzs       1/1     Running     0          6m41s\ncollector-njm62                                 2/2     Running     0          5m36s\ncollector-nxpmd                                 2/2     Running     0          5m36s\ncollector-xjl96                                 2/2     Running     0          5m36s\ncollector-xsv6b                                 2/2     Running     0          5m36s\ncollector-z9k9l                                 2/2     Running     0          5m36s\nelasticsearch-cdm-dxgp4gmf-1-577dc997c-sk7kg    2/2     Running     0          5m36s\nelasticsearch-cdm-dxgp4gmf-2-5f5d564466-cgk6x   2/2     Running     0          5m35s\nelasticsearch-cdm-dxgp4gmf-3-8695d6658c-lxblf   2/2     Running     0          5m33s\nelasticsearch-im-app-27947625-m6qd9             0/1     Completed   0          2m58s\nelasticsearch-im-audit-27947625-ht4jj           0/1     Completed   0          2m58s\nelasticsearch-im-infra-27947625-r9j8c           0/1     Completed   0          2m58s\nkibana-746f699cc-72qfk                          2/2     Running     0          5m34s\n```\n\n7. Your cluster will also need access to pull the container software required to deploy the Cloud Pak. Your Entitlement Key is used to grant access. You can download you entitlement key from <a href=\"https://myibm.ibm.com/products-services/containerlibrary\" target=\"_blank\">My IBM</a>. Click **Copy**.\n![](images/set-context-1.png)\n\n8.You will need a namespace called *tools* where you will deploy the different capabilities. You can create the namespace the way you want or you can use the following script which also creates the secret for the *ibm entitlement key*. Replace the *my-key* with your **IBM entitlement key**, run this from the root of the GitHub repo you cloned:\n```\nexport ENT_KEY=<my-key>\nscripts/02a-cp4i-ns-key-config.sh\n```\n\n\n***\n\n## 4 – Add the Catalog Sources\n\nThen we will continue with the *Infrastructure* layer installing the operators we will use for the demo. To do so, you will enable the IBM Catalog Source in your cluster.\n\n1. Run the following command:\n```\noc apply -f catalog-sources/${CP4I_VER}/00-cp4i-catalog-sources.yaml\n```\n\n2. Validate the catalog sources have been added successfully using the following command:\n```\noc get catalogsources -n openshift-marketplace\n```\n\n3. You should have a response like this:\n```\nNAME                                           DISPLAY                                                  TYPE   PUBLISHER   AGE\nappconnect-operator-catalogsource              ibm-appconnect-5.0.1                                     grpc   IBM         21m\naspera-operators                               ibm-aspera-hsts-operator-1.5.2                           grpc   IBM         21m\ncertified-operators                            Certified Operators                                      grpc   Red Hat     76m\ncloud-native-postgresql-catalog                ibm-cloud-native-postgresql-4.0.9                        grpc   IBM         21m\ncommunity-operators                            Community Operators                                      grpc   Red Hat     76m\nibm-apiconnect-catalog                         ibm-apiconnect-4.0.1                                     grpc   IBM         21m\nibm-cloud-databases-redis-operator-catalog     ibm-cloud-databases-redis-1.5.3                          grpc   IBM         21m\nibm-datapower-operator-catalog                 ibm-datapower-operator-1.6.4-linux-amd64                 grpc   IBM         21m\nibm-eventstreams-catalog                       ibm-eventstreams-1.6.6                                   grpc   IBM         21m\nibm-integration-asset-repository-catalog       ibm-integration-asset-repository-1.5.2-linux-amd64       grpc   IBM         21m\nibm-integration-operations-dashboard-catalog   ibm-integration-operations-dashboard-2.6.3-linux-amd64   grpc   IBM         21m\nibm-integration-platform-navigator-catalog     ibm-integration-platform-navigator-1.7.3                 grpc   IBM         21m\nibmmq-operator-catalogsource                   ibm-mq-2.0.4                                             grpc   IBM         21m\nopencloud-operators                            ibm-cp-common-services-1.15.5                            grpc   IBM         21m\nredhat-marketplace                             Red Hat Marketplace                                      grpc   Red Hat     76m\nredhat-operators                               Red Hat Operators                                        grpc   Red Hat     76m\n```\n\n\n***\n\n## 5 - Install the Operators\n\n***\n\n## Summary\n\nYou have successfully completed this lab. In this lab you learned:\n  - the IBM opinionated point of view regarding a GitOps centric method to manage RHOCP infrastructure, IBM integration software and application workload code (three tier GitOps architecture).\n  - how to develop, review, and extend an IBM GitOps automation repository that incapsulate key software components within the IBM Integration portfolio.\n  - how to position a GitOps automation framework as a key boot-strapping and operational mechanism supporting a Client PoC activity and Client adoption.\n\nCheck <a href=\"https://youtu.be/oTrtd9eKU8E\" target=\"blank\">this video</a> later, if you want to learn how to deliver a demo using this demo environment.\n\nSo far we have focused on the \"runtime\" aspect of the deployment, but to provide a full demo experience, in some cases you will need to walk a customer through the assets that make up the demo scenario. If you want to have the developer experience in your demo/POC, check <a href=\"https://github.ibm.com/joel-gomez/cp4i-demo#developer-experience\" target=\"_blank\">here</a> how to do it.\n","type":"Mdx","contentDigest":"346724bdd7a497370b84324be7049697","owner":"gatsby-plugin-mdx","counter":4931},"frontmatter":{"title":"Installing CP4I on IBM Cloud using OpenShift on VMware"},"exports":{},"rawBody":"---\ntitle: Installing CP4I on IBM Cloud using OpenShift on VMware\n---\n\n\n<FeatureCard\n  title=\"Installing CP4I on IBM Cloud using OpenShift on VMware\"\n  color=\"dark\"\n  >\n\n![banner](images/install-cp4i-banner.jpg)\n\n</FeatureCard>\n\n<AnchorLinks>\n  <AnchorLink>Lab Overview</AnchorLink>\n  <AnchorLink>Prerequisites</AnchorLink>\n  <AnchorLink>Installation Overview</AnchorLink>\n  <AnchorLink>1 - OpenShift Installation</AnchorLink>\n  <AnchorLink>2 – Clone Repositories</AnchorLink>\n  <AnchorLink>3 – Set Context</AnchorLink>\n  <AnchorLink>4 – Add the Catalog Sources</AnchorLink>\n  <AnchorLink>5 – Install the Operators</AnchorLink>\n  <AnchorLink>6 – Deploy the Platform UI</AnchorLink>\n  <AnchorLink>7 - Deploy Asset Repository</AnchorLink>\n  <AnchorLink>8 - Deploy API Connect</AnchorLink>\n  <AnchorLink>9 - Deploy App Connect</AnchorLink>\n  <AnchorLink>Summary</AnchorLink>\n</AnchorLinks>\n\n***\n\n## Lab Overview\n\nA basic knowledge to deliver a CP4I PoC is to know how to install CP4I. Although it is possible to install the Cloud Pak via the OpenShift UI, in this document we will walk you through applying yaml and running scripts from the command line. Having a good understand of interacting with your cluster from the CLI is essential when delivering a PoC.\n\nThe first main goal of this session is to provide you the knowledge about how to install CP4I using command line interface from scratch. Here you will use a Openshift environment provided by TechZone team on IBM Cloud (VMware). However, you are welcome to use any supported OpenShift environment.\n\nThe second goal is to provide a complete CP4I environment with multiple demo assets to be ready to progress your PoC. This is achieved by reusing a <a href=\"https://github.ibm.com/joel-gomez/cp4i-demo\" target=\"_blank\">multi-style integration demo assets</a>.\n\nIn this session you will learn:\n  - how to install CP4I using command line interface from scratch.\n  - how to deploy APIC and App Connect instances.\n\n***\n\n## Prerequisites\n\n- You need to have an OpenShift environment with GitOps operators. For this session, your proctor will provide you a pre-installed environment, with admin access (more details below). If you want to create your personal environment, check this <a href=\"https://www.youtube.com/watch?v=SmDE80vuP3w\" target=\"_blank\">video</a> or follow the preparation section from this <a href=\"https://github.com/sko-master/multi-tenancy-gitops/blob/master/doc/sko-scenario.md\" target=\"_blank\">documentation</a>.\n- You need to have installed in your machine:\n  - <a href=\"https://docs.openshift.com/container-platform/4.8/cli_reference/openshift_cli/getting-started-cli.html\" target=\"_blank\">oc CLI</a> v4.6+.\n  - github CLI\n  - Bash Shell\n  - JAVA v8+\n  - <a href=\"https://www.ibm.com/docs/en/api-connect/10.0.x?topic=configuration-installing-toolkit\" target=\"_blank\">apic CLI</a>\n\nNote some of the tools will be available after you deploy an instance of the capability you are working on. And you also need an account in the folllowing email service to configure APIC:\n  - <a href=\"https://mailtrap.io/\" target=\"_blank\">mailtrap</a>\n***\n\n## Installation Overview\n\nA IBM Cloud Pak® for Integration installation consists of a Red Hat® OpenShift® Container Platform cluster with one or more Cloud Pak for Integration operators installed and one or more instances of Platform UI deployed.\n\nIn this document, we will follow the steps below to install CP4I. If you need more details about the CP4I Installation process, please check the product documentation <a href=\"https://www.ibm.com/docs/en/cloud-paks/cp-integration/2022.4?topic=installing-overview-installation\" target=\"_blank\">here</a>.\n\n  1 - OpenShift Installation\n  2 – Clone Repositories\n  3 – Set Context\n  4 – Add the Catalog Sources\n  5 – Install the Operators\n  6 – Deploy the Platform UI\n  7 - Deploy Asset Repository\n  8 - Deploy API Connect\n  9 - Deploy App Connect\n\n***\n\n## 1 - OpenShift Installation\n\nIBM Cloud Pak for Integration brings together IBM’s market-leading middleware capabilities to support a broad range of integration styles and use cases. With powerful deployment, lifecycle management, and production services running on Red Hat OpenShift, it enables clients to leverage the latest agile integration practices, simplify the management of their integration architecture, and reduce cost. Cloud Pak for Integration demands an OpenShift cluster.\n\nFollow the steps below to provision an OpenShift cluster on VMware on IBM Cloud.\n\n1. To request an OpenShift Cluster on VMware on IBM Cloud, go <a href=\"https://techzone.ibm.com/my/reservations/create/63dba359cc19150018af084f\" target=\"_blank\">here</a> and complete the form with the follow details:\n| Field  | Value |\n| ------------- | ------------- |\n| Purpose  | If you are doing the L4 course, select **Practice/Self Enablement**\nIf you are delivering a PoC, select:\n**Proof-of-Concept** and inform the Sales opportunity.  |\n| Purpose Description  | If you are doing the L4 course, enter: **API-Led Integration L4 Course**\n\nIf you are delivering a POC, enter the PoC details.  |\n| Preferred Geography  | You are welcome to select the preferred Geography |\n\n\n![](images/ocp-install-1.png)\n\n| Field  | Value |\n| ------------- | ------------- |\n| OpenShift Version | 4.12 |\n| OCS/ODF Size  | 500 GiB |\n| Worker Node Count  | 5 |\n| Worker Node Flavor  | 16 vCPU x 64 GB - 100 GB ephemeral storage |\n\n![](images/ocp-install-2.png)\n\n\n2. Click **Submit**.\n![](images/ocp-install-3.png)\n\n3. You will receive a confirmation email confirming the instance is provisioning.\n![](images/ocp-install-4.png)\n\n4. You will receive a second email once the environment is provisioned. You should expect this to take between 30 and 120 minutes. This email contains information, such as URLs, allowing you to connect to the instance.\n![](images/ocp-install-5.png)\n\n5. Copy your **Cluster Admin Username** (1) and **Cluster Admin Password** (2). Open the **OCP Console link** (3).\n![](images/ocp-install-6.png)\n\n6. Log in with the **Cluster Admin Username** and **Password** copied in the previous step.\n![](images/ocp-install-7.png)\n\n7. Great, you are almost ready for the lab. Last but not least important, let’s copy login command to access the cluster by CLI. On the top right, click your **username** and select **Copy login command**.\n![](images/ocp-install-8.png)\n\n8. Click **Display Token**.\n![](images/ocp-install-9.png)\n\n9. Copy the **Log in with this token** command and **paste** on a terminal window.\n![](images/ocp-install-10.png)\n\n  That is it! Now you are ready for the lab. Take a breath and enjoy your lab!\n\n***\n\n## 2 - Clone Repositories\n\nTo use this guide you will need to clone the <a href=\"https://github.ibm.com/joel-gomez/cp4i-demo\" target=\"_blank\">CP4I end to end demo repo</a> to your workstation. Let's do it now!\n\n\n1. Open a terminal window and **run** the command below.\n\n```\ngit clone https://github.ibm.com/joel-gomez/cp4i-demo.git\n```\n\n2. Open the **cp4i-demo** folder.\n```\ncd cp4i-demo\n```\n\n***\n\n## 3 - Set Context\n\nBased on where you have deployed your OCP cluster you will need to set up some environment variables to inform the installation script about your environment. Let's do it here!\n\n1. First, you need to define an environment variable to use the proper storage classes when deploying the instances. The two option available at the moment are ROKS and ODF. In this lab, you are using ODF.\n```\nexport OCP_TYPE=ODF\n```\n\n2. To select which version you want to deploy set up the correspponding environment variable. The options available are the latest LTS and CD versions. In this lab, let's use **2022.4** version.\n```\nexport CP4I_VER=2022.4\n```\n\n3. By default tracing will be enabled when possible to show this functionality. For clarify, when you are deploying CP4I v2022.2 tracing means Operations Dashboard, and when using v2022.4 it is Instana. In any case, if your demo does not require this option you can disable it setting the environment variable CP4I_TRACING to false, with it you are simplifying the deployment process. In this lab, you will disable tracing. Check the <a href=\"https://github.ibm.com/joel-gomez/cp4i-demo\" target=\"_blank\">CP4I end to end demo repo</a> for more information if you want/need to enable the tracing.\n```\nexport CP4I_TRACING=NO\n```\n\n4. Before you start you can check you have the tools used by this repo running the following script:\n```\nscripts/00a-cp4i-prereq-vaidation.sh\n```\n\n5. We will start installing the overall prerequisites that will help to demonstrate the integration with OCP. To do so, run the following command to install the logging functionality. The script will track the progress and it will send you an email to your *mailtrap* inbox when the operators and logging instance are ready or in case any problem is detected, for that you need to set the environment variables with your *mailtrap* account as shown below.\n```\nexport MAILTRAP_USER=<my-mailtrap-user>\nexport MAILTRAP_PWD=<my-mailtrap-pwd>\nscripts/00b-logging-install.sh\n```\n\n6. To confirm the installation completed successfully after receiving the email you can run the following commands:\n```\noc get csv -n openshift-logging\noc get pods -n openshift-logging\n```\n\nYou should receive a response like this for each command respectively.\n```\nNAME                            DISPLAY                            VERSION   REPLACES   PHASE\ncluster-logging.v5.6.1          Red Hat OpenShift Logging          5.6.1                Succeeded\nelasticsearch-operator.v5.6.1   OpenShift Elasticsearch Operator   5.6.1                Succeeded\n```\n\n```\nNAME                                            READY   STATUS      RESTARTS   AGE\ncluster-logging-operator-756b4c48cc-lhkzs       1/1     Running     0          6m41s\ncollector-njm62                                 2/2     Running     0          5m36s\ncollector-nxpmd                                 2/2     Running     0          5m36s\ncollector-xjl96                                 2/2     Running     0          5m36s\ncollector-xsv6b                                 2/2     Running     0          5m36s\ncollector-z9k9l                                 2/2     Running     0          5m36s\nelasticsearch-cdm-dxgp4gmf-1-577dc997c-sk7kg    2/2     Running     0          5m36s\nelasticsearch-cdm-dxgp4gmf-2-5f5d564466-cgk6x   2/2     Running     0          5m35s\nelasticsearch-cdm-dxgp4gmf-3-8695d6658c-lxblf   2/2     Running     0          5m33s\nelasticsearch-im-app-27947625-m6qd9             0/1     Completed   0          2m58s\nelasticsearch-im-audit-27947625-ht4jj           0/1     Completed   0          2m58s\nelasticsearch-im-infra-27947625-r9j8c           0/1     Completed   0          2m58s\nkibana-746f699cc-72qfk                          2/2     Running     0          5m34s\n```\n\n7. Your cluster will also need access to pull the container software required to deploy the Cloud Pak. Your Entitlement Key is used to grant access. You can download you entitlement key from <a href=\"https://myibm.ibm.com/products-services/containerlibrary\" target=\"_blank\">My IBM</a>. Click **Copy**.\n![](images/set-context-1.png)\n\n8.You will need a namespace called *tools* where you will deploy the different capabilities. You can create the namespace the way you want or you can use the following script which also creates the secret for the *ibm entitlement key*. Replace the *my-key* with your **IBM entitlement key**, run this from the root of the GitHub repo you cloned:\n```\nexport ENT_KEY=<my-key>\nscripts/02a-cp4i-ns-key-config.sh\n```\n\n\n***\n\n## 4 – Add the Catalog Sources\n\nThen we will continue with the *Infrastructure* layer installing the operators we will use for the demo. To do so, you will enable the IBM Catalog Source in your cluster.\n\n1. Run the following command:\n```\noc apply -f catalog-sources/${CP4I_VER}/00-cp4i-catalog-sources.yaml\n```\n\n2. Validate the catalog sources have been added successfully using the following command:\n```\noc get catalogsources -n openshift-marketplace\n```\n\n3. You should have a response like this:\n```\nNAME                                           DISPLAY                                                  TYPE   PUBLISHER   AGE\nappconnect-operator-catalogsource              ibm-appconnect-5.0.1                                     grpc   IBM         21m\naspera-operators                               ibm-aspera-hsts-operator-1.5.2                           grpc   IBM         21m\ncertified-operators                            Certified Operators                                      grpc   Red Hat     76m\ncloud-native-postgresql-catalog                ibm-cloud-native-postgresql-4.0.9                        grpc   IBM         21m\ncommunity-operators                            Community Operators                                      grpc   Red Hat     76m\nibm-apiconnect-catalog                         ibm-apiconnect-4.0.1                                     grpc   IBM         21m\nibm-cloud-databases-redis-operator-catalog     ibm-cloud-databases-redis-1.5.3                          grpc   IBM         21m\nibm-datapower-operator-catalog                 ibm-datapower-operator-1.6.4-linux-amd64                 grpc   IBM         21m\nibm-eventstreams-catalog                       ibm-eventstreams-1.6.6                                   grpc   IBM         21m\nibm-integration-asset-repository-catalog       ibm-integration-asset-repository-1.5.2-linux-amd64       grpc   IBM         21m\nibm-integration-operations-dashboard-catalog   ibm-integration-operations-dashboard-2.6.3-linux-amd64   grpc   IBM         21m\nibm-integration-platform-navigator-catalog     ibm-integration-platform-navigator-1.7.3                 grpc   IBM         21m\nibmmq-operator-catalogsource                   ibm-mq-2.0.4                                             grpc   IBM         21m\nopencloud-operators                            ibm-cp-common-services-1.15.5                            grpc   IBM         21m\nredhat-marketplace                             Red Hat Marketplace                                      grpc   Red Hat     76m\nredhat-operators                               Red Hat Operators                                        grpc   Red Hat     76m\n```\n\n\n***\n\n## 5 - Install the Operators\n\n***\n\n## Summary\n\nYou have successfully completed this lab. In this lab you learned:\n  - the IBM opinionated point of view regarding a GitOps centric method to manage RHOCP infrastructure, IBM integration software and application workload code (three tier GitOps architecture).\n  - how to develop, review, and extend an IBM GitOps automation repository that incapsulate key software components within the IBM Integration portfolio.\n  - how to position a GitOps automation framework as a key boot-strapping and operational mechanism supporting a Client PoC activity and Client adoption.\n\nCheck <a href=\"https://youtu.be/oTrtd9eKU8E\" target=\"blank\">this video</a> later, if you want to learn how to deliver a demo using this demo environment.\n\nSo far we have focused on the \"runtime\" aspect of the deployment, but to provide a full demo experience, in some cases you will need to walk a customer through the assets that make up the demo scenario. If you want to have the developer experience in your demo/POC, check <a href=\"https://github.ibm.com/joel-gomez/cp4i-demo#developer-experience\" target=\"_blank\">here</a> how to do it.\n","fileAbsolutePath":"/Users/rafaelosorio/Documents/GitHub/learninghub/src/pages/labs/installing-cp4i/index.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}